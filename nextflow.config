/*
** bbi-sciatac-analyze process profiles.
** Notes:
**   o  these profiles define process block-specific directives
**   o  the 'standard' profile is used by default. Alternate
**      profiles are selected on the command line, e.g.,
**
**        nextflow run -profile <my_profile> main.nf
**
**   o  the standard profile here defines directive values
**      that are used on the UW Genome Sciences computing
**      cluster for Nextseq runs.
**   o  there can be more than one configuration script, which
**      can complicate troubleshooting when the scripts behave
**      unexpectedly. The Nextflow documentation explains
**
**        When a pipeline script is launched Nextflow looks for
**        a file named nextflow.config in the current directory
**        and in the script base directory (if it is not the
**        same as the current directory). Finally it checks for
**        the file $HOME/.nextflow/config.
**
**        When more than one of the above files exist they are
**        merged, so that the settings in the first override
**        the same ones that may appear in the second one, and
**        so on.
**
**        The default config file search mechanism can be
**        extended proving an extra configuration file by using
**        the command line option -c <config file>.
**
**        It's worth noting that by doing this, the files
**        nextflow.config and $HOME/.nextflow/config are not
**        ignored and they are merged as explained above.
**
**        If you want to ignore any default configuration
**        files and use only the custom one use the command
**        line option -C <config file>.
**
**  o  selectors priority
**       When mixing generic process configuration and selectors
**       the following priority rules are applied (from lower
**       to higher):
**
**         1.  Process generic configuration.
**         2.  Process specific directive defined in the workflow
**             script.
**         3.  withLabel selector definition.
**         4.  withName selector definition.
**
**  o  a 'withName:' block defines directives used in the
**     process block with the same names.
**  o  at the BBI we use modules to access required programs
**     so we place module directives in the standard profile.
**  o  programs installed locally can be accessed by modifying
**     the PATH environment variable for the submitted jobs;
**     that is, by adding the directories in which the
**     programs can be found to PATH. Use the 'beforeScript'
**     directive for this purpose, for example
**
**       beforeScript = 'export PATH=/opt/python/bin:$PATH'
**  o  notice that the 'ext' allows one to define their own
**     process-specific variables that are accessible within
**     the process block. For example, in order to define
**     a variable called 'pass_in' for use in a process block
**     called 'do_this', add to this nextflow.config file
**     lines that look like
**
**
**  profiles {
**    my_profile {
**      process {
**
**        withName: do_this {
**          pass_in = 'Hello World'
**        }
**      }
**    }
**  }
**
** and in the main.nf script refer to pass_in within the
** do_this process block as
**
** process do_this {
**
** println( 'print this: ' + task.ext.pass_in )
** }
**
** The 'task' scope can be used to output directive values
** where one refers to the directive values as
**
**   task.memory
**   task.cpus
**   ...
**
** This can be helpful when troubleshooting.
*/

manifest.version = '2.1.0'
params.version = manifest.version

profiles {


  standard {
    num_threads_trimmomatic = 4
    mem_trimmomatic = 4.0 / num_threads_trimmomatic

    process {
      beforeScript =  '. /etc/profile.d/modules.sh'
      executor = "sge"
      errorStrategy = "finish"
      queue = "shendure-long.q"
      maxForks = 48
//      clusterOptions = '-l centos=7'

      withName: sortTssBedProcess {
        module = 'modules:modules-init:modules-gs'
        memory = '4G'
        cpus = 1
      }

      withName: sortChromosomeSizeProcess {
        module = 'modules:modules-init:modules-gs'
        memory = '4G'
        cpus = 1
      }

      withName: sortPeakFileProcess {
        module = 'modules:modules-init:modules-gs'
        memory = '16G'
        cpus = 1
      }

      withName: adapterTrimmingProcess {
        module = 'modules:modules-init:modules-gs'
        penv = 'serial'
      }

      withName: runAlignProcess {
        module = 'modules:modules-init:modules-gs:gcc/8.1.0:tbb/2020_U2:samtools/1.10:bowtie2/2.4.1:bedtools/2.27.1'
        penv = 'serial'
      }

      withName: runHashReadFilterProcess {
        memory = '4G'
      }

      withName: runHashReadAggregationProcess {
        module = 'modules:modules-init:modules-gs:pcre2/10.35:R/4.0.4'
        memory = '16G'
      }

      withName: mergeBamsProcess {
        module = 'modules:modules-init:modules-gs:sambamba/0.6.8:zlib/1.2.11:samtools/1.10'
        penv = 'serial'
        memory = '2G'
        cpus = 8
      }

      withName: mergeMitoBamsProcess {
        module = 'modules:modules-init:modules-gs:sambamba/0.6.8:zlib/1.2.11:samtools/1.10'
        penv = 'serial'
        memory = '2G'
        cpus = 8
      }

      withName: getUniqueFragmentsProcess {
        module = 'modules:modules-init:modules-gs:python/3.7.7:numpy/1.21.1:tabix/0.2.6:samtools/1.10:bedtools/2.27.1:kentUtils/302.1.0'
        memory = '64G'
        cpus = 1
      }

      withName: getUniqueFragmentsMitoProcess {
        module = 'modules:modules-init:modules-gs:python/3.7.7:numpy/1.21.1:tabix/0.2.6:samtools/1.10:bedtools/2.27.1:kentUtils/302.1.0'
        memory = '64G'
        cpus = 1
      }

      withName: combineReadCountsProcess {
        module = 'modules:modules-init:modules-gs:python/3.7.7'
        memory = '16G'
        cpus = 1
      }

      withName: callPeaksProcess {
        module = 'modules:modules-init:modules-gs:python/3.7.7:numpy/1.21.1:MACS/2.2.7.1'
        memory = '16G'
        cpus = 1
      }

      withName: mergePeaksByGroupProcess {
        module = 'modules:modules-init:modules-gs:bedtools/2.27.1'
        memory = '8G'
        cpus = 1
      }

      withName: mergePeaksByFileProcess {
        module = 'modules:modules-init:modules-gs:bedtools/2.27.1'
        memory = '4G'
        cpus = 1
      }

      withName: makeWindowedGenomeIntervalsProcess {
        module = 'modules:modules-init:modules-gs:bedtools/2.27.1'
        memory = '4G'
        cpus = 1
        ext.window_size = 5000
      }

      withName: makePromoterSumIntervalsProcess {
        module = 'modules:modules-init:modules-gs:bedtools/2.27.1'
        memory = '4G'
        cpus = 1
        ext.proximal_upstream = 1000
        ext.proximal_downstream = 500
        ext.peak_to_tss_distance_threshold = 30000
      }

      withName: makeMergedPeakRegionCountsProcess {
        module = 'modules:modules-init:modules-gs:zlib/1.2.11:samtools/1.10:bedtools/2.27.1'
        memory = '24G'
        cpus = 1
        ext.flanking_distance = 0
      }

      withName: makeTssRegionCountsProcess {
        module = 'modules:modules-init:modules-gs:zlib/1.2.11:samtools/1.10:bedtools/2.27.1'
        penv = 'serial'
        memory = '24G'
        cpus = 1
        ext.flanking_distance = 1000
      }

      withName: makeCountReportsProcess {
        module = 'modules:modules-init:modules-gs:gcc/8.1.0:pcre2/10.35:hdf5/1.10.1:R/4.0.4'
        memory = '8G'
        cpus = 1
      }

      withName: callCellsProcess {
        module = 'modules:modules-init:modules-gs'
        memory = '4G'
        cpus = 1
      }

      withName: getPerBaseCoverageTssProcess {
        module = 'modules:modules-init:modules-gs:gcc/8.1.0:pcre2/10.35:hdf5/1.10.1:R/4.0.4:bedtools/2.27.1'
        memory = '16G'
        cpus = 1
        ext.flanking_distance = 1000
      }

      withName: makePeakMatrixProcess {
        module = 'modules:modules-init:modules-gs:bedtools/2.27.1:zlib/1.2.11:pigz/2.3'
        memory = '48G'
        cpus = 1
      }

      withName: makeWindowMatrixProcess {
        module = 'modules:modules-init:modules-gs:bedtools/2.27.1:zlib/1.2.11:pigz/2.3'
        memory = '96G'
        cpus = 1
      }

      withName: makePromoterMatrixProcess {
        module = 'modules:modules-init:modules-gs:bedtools/2.27.1:zlib/1.2.11:pigz/2.3'
        memory = '48G'
        cpus = 1
      }

      withName: summarizeCellCallsProcess {
        module = 'modules:modules-init:modules-gs:gcc/8.1.0:pcre2/10.35:hdf5/1.10.1:R/4.0.4'
        memory = '16G'
        cpus = 1
      }

      withName: makeGenomeBrowserFilesProcess {
        module = 'modules:modules-init:modules-gs:kentUtils/302.1.0:tabix/0.2.6'
        memory = '16G'
        cpus = 1
      }

      withName: getBandingScoresProcess {
        module = 'modules:modules-init:modules-gs:zlib/1.2.11:samtools/1.10:gcc/8.1.0:pcre2/10.35:hdf5/1.10.1:R/4.0.4'
        memory = '12G'
        cpus = 1
      }

      withName: callMotifsProcess {
        module = 'modules:modules-init:modules-gs'
        memory = '12G'
        cpus = 1
        maxForks = 96
        ext.pwm_threshold = 1e-7
      }

      withName: makeMotifMatrixProcess {
        module = 'modules:modules-init:modules-gs:zlib/1.2.11:pigz/2.3'
        memory = '12G'
        cpus = 1
      }

      withName: makeReducedDimensionMatrixProcess {
        module = 'modules:modules-init:modules-gs:gcc/8.1.0:pcre2/10.35:hdf5/1.10.1:R/4.0.4:python/3.7.7:numpy/1.21.1:six/1.15.0:matplotlib/3.4.2'
        memory = '32G'
        cpus = 1
        ext.doublet_predict_top_ntile = '0.1'
        ext.umi_cutoff = '100'
        ext.frip_cutoff = '0.1'
        ext.frit_cutoff = '0.05'
        ext.num_lsi_dimensions = '50'
        ext.cluster_resolution = '1.0e-3'
      }

      withName: experimentDashboardProcess {
        module = 'modules:modules-init:modules-gs:python/3.7.7'
        memory = '16G'
        cpus = 1
      }

      withName: makeMergedPlotFilesProcess {
        module = 'modules:modules-init:modules-gs:python/3.7.7'
        memory = '16G'
        cpus = 1
      }
    }
  } /* End of standard profile. */


  ubuntu_22_04 {
    num_threads_trimmomatic = 4
    mem_trimmomatic = 4.0 / num_threads_trimmomatic

    process {
      beforeScript =  '. /etc/profile.d/modules.sh'
      executor = "sge"
      errorStrategy = "finish"
//      queue = "shendure-long.q"
      maxForks = 48
//      clusterOptions = '-l gpgpu'

      withName: sortTssBedProcess {
        module = 'modules:modules-init:modules-gs'
        memory = '4G'
        cpus = 1
      }

      withName: sortChromosomeSizeProcess {
        module = 'modules:modules-init:modules-gs'
        memory = '4G'
        cpus = 1
      }

      withName: sortPeakFileProcess {
        module = 'modules:modules-init:modules-gs'
        memory = '16G'
        cpus = 1
      }

      withName: adapterTrimmingProcess {
        module = 'modules:modules-init:modules-gs'
        penv = 'serial'
      }

      withName: runAlignProcess {
        module = 'modules:modules-init:modules-gs:samtools/1.19:bowtie2/2.5.3:bedtools/2.31.1'
        penv = 'serial'
      }

      withName: runHashReadFilterProcess {
        memory = '4G'
      }

      withName: runHashReadAggregationProcess {
        module = 'modules:modules-init:modules-gs:hdf5/1.14.3:R/4.3.2'
        memory = '16G'
      }

      withName: mergeBamsProcess {
        module = 'modules:modules-init:modules-gs:sambamba/1.0.1_static:samtools/1.19'
        penv = 'serial'
        memory = '2G'
        cpus = 8
      }

      withName: mergeMitoBamsProcess {
        module = 'modules:modules-init:modules-gs:sambamba/1.0.1_static:samtools/1.19'
        penv = 'serial'
        memory = '2G'
        cpus = 8
      }

      withName: getUniqueFragmentsProcess {
        module = 'modules:modules-init:modules-gs:python/3.12.1:numpy/1.26.3:tabix/0.2.6:samtools/1.19:bedtools/2.31.1:kentUtils/461.1.0'
        memory = '64G'
        cpus = 1
      }

      withName: getUniqueFragmentsMitoProcess {
        module = 'modules:modules-init:modules-gs:python/3.12.1:numpy/1.26.3:tabix/0.2.6:samtools/1.19:bedtools/2.31.1:kentUtils/461.1.0'
        memory = '64G'
        cpus = 1
      }

      withName: combineReadCountsProcess {
        module = 'modules:modules-init:modules-gs:python/3.12.1'
        memory = '16G'
        cpus = 1
      }

      withName: callPeaksProcess {
        module = 'modules:modules-init:modules-gs:python/3.12.1:numpy/1.26.3:MACS/3.0.1'
        memory = '16G'
        cpus = 1
      }

      withName: mergePeaksByGroupProcess {
        module = 'modules:modules-init:modules-gs:bedtools/2.31.1'
        memory = '8G'
        cpus = 1
      }

      withName: mergePeaksByFileProcess {
        module = 'modules:modules-init:modules-gs:bedtools/2.31.1'
        memory = '4G'
        cpus = 1
      }

      withName: makeWindowedGenomeIntervalsProcess {
        module = 'modules:modules-init:modules-gs:bedtools/2.31.1'
        memory = '4G'
        cpus = 1
        ext.window_size = 5000
      }

      withName: makePromoterSumIntervalsProcess {
        module = 'modules:modules-init:modules-gs:bedtools/2.31.1'
        memory = '4G'
        cpus = 1
        ext.proximal_upstream = 1000
        ext.proximal_downstream = 500
        ext.peak_to_tss_distance_threshold = 30000
      }

      withName: makeMergedPeakRegionCountsProcess {
        module = 'modules:modules-init:modules-gs:samtools/1.19:bedtools/2.31.1'
        memory = '24G'
        cpus = 1
        ext.flanking_distance = 0
      }

      withName: makeTssRegionCountsProcess {
        module = 'modules:modules-init:modules-gs:samtools/1.19:bedtools/2.31.1'
        penv = 'serial'
        memory = '24G'
        cpus = 1
        ext.flanking_distance = 1000
      }

      withName: makeCountReportsProcess {
        module = 'modules:modules-init:modules-gs:hdf5/1.14.3:R/4.3.2'
        memory = '8G'
        cpus = 1
      }

      withName: callCellsProcess {
        module = 'modules:modules-init:modules-gs'
        memory = '4G'
        cpus = 1
      }

      withName: getPerBaseCoverageTssProcess {
        module = 'modules:modules-init:modules-gs:hdf5/1.14.3:R/4.3.2:bedtools/2.31.1'
        memory = '16G'
        cpus = 1
        ext.flanking_distance = 1000
      }

      withName: makePeakMatrixProcess {
        module = 'modules:modules-init:modules-gs:bedtools/2.31.1'
        memory = '48G'
        cpus = 1
      }

      withName: makeWindowMatrixProcess {
        module = 'modules:modules-init:modules-gs:bedtools/2.31.1'
        memory = '96G'
        cpus = 1
      }

      withName: makePromoterMatrixProcess {
        module = 'modules:modules-init:modules-gs:bedtools/2.31.1'
        memory = '48G'
        cpus = 1
      }

      withName: summarizeCellCallsProcess {
        module = 'modules:modules-init:modules-gs:hdf5/1.14.3:R/4.3.2'
        memory = '16G'
        cpus = 1
      }

      withName: makeGenomeBrowserFilesProcess {
        module = 'modules:modules-init:modules-gs:kentUtils/461.1.0:tabix/0.2.6'
        memory = '16G'
        cpus = 1
      }

      withName: getBandingScoresProcess {
        module = 'modules:modules-init:modules-gs:samtools/1.19:hdf5/1.14.3:R/4.3.2'
        memory = '12G'
        cpus = 1
      }

      withName: callMotifsProcess {
        module = 'modules:modules-init:modules-gs'
        memory = '12G'
        cpus = 1
        maxForks = 96
        ext.pwm_threshold = 1e-7
      }

      withName: makeMotifMatrixProcess {
        module = 'modules:modules-init:modules-gs'
        memory = '12G'
        cpus = 1
      }

      withName: makeReducedDimensionMatrixProcess {
        module = 'modules:modules-init:modules-gs:hdf5/1.14.3:R/4.3.2:python/3.12.1:numpy/1.26.3:matplotlib/3.8.3'
        memory = '32G'
        cpus = 1
        ext.doublet_predict_top_ntile = '0.1'
        ext.umi_cutoff = '100'
        ext.frip_cutoff = '0.1'
        ext.frit_cutoff = '0.05'
        ext.num_lsi_dimensions = '50'
        ext.cluster_resolution = '1.0e-3'
      }

      withName: experimentDashboardProcess {
        module = 'modules:modules-init:modules-gs:python/3.12.1'
        memory = '16G'
        cpus = 1
      }

      withName: makeMergedPlotFilesProcess {
        module = 'modules:modules-init:modules-gs:python/3.12.1'
        memory = '16G'
        cpus = 1
      }
    }
  } /* End of ubuntu_22_04 profile. */

}
